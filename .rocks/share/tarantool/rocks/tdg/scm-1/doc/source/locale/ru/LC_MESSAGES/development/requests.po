
#: ../../development/requests.rst:3 ../../development/requests.rst:212
msgid "Data access requests"
msgstr "Запросы данных"

#: ../../development/requests.rst:5
msgid ""
"In this chapter, you will go through a number of use cases to understand the"
" logic and syntax of data access requests in TDG."
msgstr ""
"Глава посвящена запросам данных в TDG. В ней описаны логика и синтаксис "
"запросов, а также представлено несколько сценариев использования."

#: ../../development/requests.rst:7
msgid ""
"You will use the already :doc:`deployed TDG cluster "
"</administration/deployment/ansible-deployment>` as the environment to run "
"requests."
msgstr ""
"В качестве среды для выполнения запросов вы будете использовать уже "
":doc:`развернутый TDG-кластер </administration/deployment/ansible-"
"deployment>`."

#: ../../development/requests.rst:17
msgid "Preparing a data model"
msgstr "Подготовка модели данных"

#: ../../development/requests.rst:19
msgid ""
"To upload data in TDG and then access the data via GraphQL requests, you "
"need to define a data model first. You will use a simple model that has two "
"object types—``Country`` and ``City``—with the following fields, indexes, "
"and relations:"
msgstr ""
"Чтобы загрузить данные в TDG, а затем получать к ним доступ через запросы "
"GraphQL, вам нужно сначала определить модель данных. В нашем примере "
"приводится простая модель с двумя типами объектов: ``Country`` (страна) и "
"``City`` (город). В модели представлены следующие поля, индексы и отношения:"

#: ../../development/requests.rst:54
msgid ""
"To upload the data model to TDG, you need to present it in the *Avro Schema*"
" notation:"
msgstr ""
"Чтобы загрузить модель данных в TDG, ее надо представить в виде *схемы "
"данных Avro*:"

#: ../../development/requests.rst:56
msgid ""
"[\n"
"    {\n"
"        \"name\": \"Country\",\n"
"        \"type\": \"record\",\n"
"        \"fields\": [\n"
"            {\"name\": \"title\", \"type\": \"string\"},\n"
"            {\"name\": \"phone_code\", \"type\": [\"null\", \"string\"]}\n"
"        ],\n"
"        \"indexes\": [\"title\"],\n"
"        \"relations\": [\n"
"         { \"name\": \"city\", \"to\": \"City\", \"count\": \"many\", \"from_fields\": \"title\", \"to_fields\": \"country\" }\n"
"        ]\n"
"    },\n"
"    {\n"
"        \"name\": \"City\",\n"
"        \"type\": \"record\",\n"
"        \"fields\": [\n"
"            {\"name\": \"title\", \"type\": \"string\"},\n"
"            {\"name\": \"country\", \"type\": \"string\"},\n"
"            {\"name\": \"population\", \"type\": \"int\"},\n"
"            {\"name\": \"capital\", \"type\": \"boolean\"}\n"
"        ],\n"
"        \"indexes\": [\n"
"            {\"name\":\"primary\", \"parts\":[\"title\", \"country\"]},\n"
"            \"title\",\n"
"            \"country\",\n"
"            \"population\"\n"
"        ]\n"
"    }\n"
"]"
msgstr ""
"[\n"
"    {\n"
"        \"name\": \"Country\",\n"
"        \"type\": \"record\",\n"
"        \"fields\": [\n"
"            {\"name\": \"title\", \"type\": \"string\"},\n"
"            {\"name\": \"phone_code\", \"type\": [\"null\", \"string\"]}\n"
"        ],\n"
"        \"indexes\": [\"title\"],\n"
"        \"relations\": [\n"
"         { \"name\": \"city\", \"to\": \"City\", \"count\": \"many\", \"from_fields\": \"title\", \"to_fields\": \"country\" }\n"
"        ]\n"
"    },\n"
"    {\n"
"        \"name\": \"City\",\n"
"        \"type\": \"record\",\n"
"        \"fields\": [\n"
"            {\"name\": \"title\", \"type\": \"string\"},\n"
"            {\"name\": \"country\", \"type\": \"string\"},\n"
"            {\"name\": \"population\", \"type\": \"int\"},\n"
"            {\"name\": \"capital\", \"type\": \"boolean\"}\n"
"        ],\n"
"        \"indexes\": [\n"
"            {\"name\":\"primary\", \"parts\":[\"title\", \"country\"]},\n"
"            \"title\",\n"
"            \"country\",\n"
"            \"population\"\n"
"        ]\n"
"    }\n"
"]"

#: ../../development/requests.rst:93
msgid "Uploading the data model"
msgstr "Загрузка модели данных"

#: ../../development/requests.rst:95
msgid ""
"Next, you need to upload the :ref:`data model <graphql_model_avro>` to TDG. "
"You can do so in the web interface."
msgstr ""
"Теперь необходимо загрузить :ref:`модель данных <graphql_model_avro>` в TDG."
" Это можно сделать через веб-интерфейс."

#: ../../development/requests.rst:97
msgid ""
"In a web browser, open the TDG web interface on an instance in a replica set"
" with the \"runner\" cluster role. You can use the already :doc:`deployed "
"TDG cluster </administration/deployment/ansible-deployment>`. In this case, "
"the instance's URL will be `http://172.19.0.2:8082 "
"<http://172.19.0.2:8082>`_."
msgstr ""
"Откройте в браузере веб-интерфейс TDG на экземпляре, входящем в набор реплик"
" с кластерной ролью \"runner\". Если вы используете уже :doc:`развернутый "
"TDG-кластер </administration/deployment/ansible-deployment>`, URL экземпляра"
" будет следующий: `http://172.19.0.2:8082 <http://172.19.0.2:8082>`_."

#: ../../development/requests.rst:101
msgid "On the left menu, click the **Model** tab."
msgstr "В меню слева выберите вкладку **Model** (Модель)."

#: ../../development/requests.rst:102
msgid ""
"Paste the :ref:`data model <graphql_model_avro>` into the **Request** field."
msgstr ""
"Вставьте :ref:`модель данных <graphql_model_avro>` в поле **Request** "
"(Запрос)."

#: ../../development/requests.rst:107
msgid "Click **Submit**."
msgstr "Нажмите **Submit**."

#: ../../development/requests.rst:109
msgid ""
"The data model has been uploaded. Now you can insert (upload), select, and "
"delete data."
msgstr ""
"Модель данных загружена. Теперь можно добавлять (загружать), выбирать и "
"удалять данные."

#: ../../development/requests.rst:114
msgid "Uploading data"
msgstr "Загрузка данных"

#: ../../development/requests.rst:116
msgid "You can upload data in TDG by means of a GraphQL mutation:"
msgstr "Загрузить данные в TDG можно с помощью мутации GraphQL:"

#: ../../development/requests.rst:118 ../../development/requests.rst:229
msgid "On the left menu, click the **GraphQL** tab."
msgstr "В меню слева выберите вкладку **GraphQL**."

#: ../../development/requests.rst:119
msgid "Select **default** for the desired scheme and clear the request field."
msgstr "Выберите **default** в качестве нужной схемы и очистите поле запроса."

#: ../../development/requests.rst:124
msgid "Paste the following request into the left field:"
msgstr "В поле слева вставьте следующий запрос:"

#: ../../development/requests.rst:126
msgid ""
"mutation all {\n"
"    russia:Country(insert: {\n"
"        title: \"Russia\",\n"
"        phone_code: \"+7\"}) {\n"
"    title\n"
"    phone_code\n"
"    }\n"
"    germany:Country(insert: {\n"
"        title: \"Germany\",\n"
"        phone_code: \"+49\"}) {\n"
"    title\n"
"    }\n"
"    moscow:City(insert: {\n"
"        title: \"Moscow\",\n"
"        country: \"Russia\",\n"
"        population: 12655050,\n"
"        capital: true}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    spb:City(insert: {\n"
"        title: \"Saint Petersburg\",\n"
"        country: \"Russia\",\n"
"        population: 5384342,\n"
"        capital: false}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    tver:City(insert: {\n"
"        title: \"Tver\",\n"
"        country: \"Russia\",\n"
"        population: 424969,\n"
"        capital: false}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    berlin:City(insert: {\n"
"        title: \"Berlin\",\n"
"        country: \"Germany\",\n"
"        population: 3520031,\n"
"        capital: true}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    munich:City(insert: {\n"
"        title: \"Munich\",\n"
"        country: \"Germany\",\n"
"        population: 1450381,\n"
"        capital: false}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    dresden:City(insert: {\n"
"        title: \"Dresden\",\n"
"        country: \"Germany\",\n"
"        population: 547172,\n"
"        capital: false}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"}"
msgstr ""
"mutation all {\n"
"    russia:Country(insert: {\n"
"        title: \"Russia\",\n"
"        phone_code: \"+7\"}) {\n"
"    title\n"
"    phone_code\n"
"    }\n"
"    germany:Country(insert: {\n"
"        title: \"Germany\",\n"
"        phone_code: \"+49\"}) {\n"
"    title\n"
"    }\n"
"    moscow:City(insert: {\n"
"        title: \"Moscow\",\n"
"        country: \"Russia\",\n"
"        population: 12655050,\n"
"        capital: true}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    spb:City(insert: {\n"
"        title: \"Saint Petersburg\",\n"
"        country: \"Russia\",\n"
"        population: 5384342,\n"
"        capital: false}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    tver:City(insert: {\n"
"        title: \"Tver\",\n"
"        country: \"Russia\",\n"
"        population: 424969,\n"
"        capital: false}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    berlin:City(insert: {\n"
"        title: \"Berlin\",\n"
"        country: \"Germany\",\n"
"        population: 3520031,\n"
"        capital: true}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    munich:City(insert: {\n"
"        title: \"Munich\",\n"
"        country: \"Germany\",\n"
"        population: 1450381,\n"
"        capital: false}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"    dresden:City(insert: {\n"
"        title: \"Dresden\",\n"
"        country: \"Germany\",\n"
"        population: 547172,\n"
"        capital: false}) {\n"
"    title\n"
"    country\n"
"    population\n"
"    capital\n"
"    }\n"
"}"

#: ../../development/requests.rst:202
msgid "Execute the mutation by clicking the **Execute Query** button:"
msgstr "Выполните мутацию, нажав кнопку **Execute Query** (Выполнить запрос):"

#: ../../development/requests.rst:207
msgid ""
"The data has been uploaded, as you can see by the system response in the "
"right field."
msgstr "Данные загружены, как видно по ответу системы в поле справа."

#: ../../development/requests.rst:214
msgid "Here are the common use cases for data access requests:"
msgstr "Вот типичные сценарии использования, связанные с запросами данных:"

#: ../../development/requests.rst:216
msgid ":ref:`General object type query <graphql_queries_gen>`"
msgstr ":ref:`Общий запрос объектов по типу <graphql_queries_gen>`"

#: ../../development/requests.rst:217
msgid ":ref:`Requests by primary index <graphql_queries_prim>`"
msgstr ":ref:`Запросы по первичному индексу <graphql_queries_prim>`"

#: ../../development/requests.rst:218
msgid ":ref:`Requests by secondary index <graphql_queries_second>`"
msgstr ":ref:`Запросы по вторичному индексу <graphql_queries_second>`"

#: ../../development/requests.rst:219
msgid ":ref:`Requests by compound index <graphql_queries_compound>`"
msgstr ":ref:`Запросы по составному индексу <graphql_queries_compound>`"

#: ../../development/requests.rst:220
msgid ":ref:`Comparison operators <graphql_queries_compar>`"
msgstr ":ref:`Операторы сравнения <graphql_queries_compar>`"

#: ../../development/requests.rst:221
msgid ":ref:`Multiple conditions <graphql_queries_multiple>`"
msgstr ":ref:`Множественные условия <graphql_queries_multiple>`"

#: ../../development/requests.rst:222
msgid ":ref:`Requests by relations <graphql_queries_relations>`"
msgstr ":ref:`Запросы по отношениям <graphql_queries_relations>`"

#: ../../development/requests.rst:223
msgid ":ref:`Pagination <graphql_queries_pagination>`"
msgstr ":ref:`Разбиение на страницы <graphql_queries_pagination>`"

#: ../../development/requests.rst:224
msgid ":ref:`Requests by version <graphql_queries_version>`"
msgstr ":ref:`Запросы по версии <graphql_queries_version>`"

#: ../../development/requests.rst:226
msgid ""
"The easiest way to run GraphQL request examples is to use the embedded "
"GraphiQL client in the TDG web interface. For data access requests, use the "
"**default** scheme:"
msgstr ""
"Примеры запросов GraphQL, приведенные ниже, проще всего запустить через "
"встроенный клиент GraphiQL в веб-интерфейсе TDG. Отправляя запросы на доступ"
" к данным, используйте схему по умолчанию (**default**):"

#: ../../development/requests.rst:230
msgid ""
"Select **default** for the desired scheme, clear the request field, and "
"paste the example request code."
msgstr ""
"Выберите **default** в качестве нужной схемы, очистите поле запроса и "
"вставьте код примера."

#: ../../development/requests.rst:235
msgid "General object type query"
msgstr "Общий запрос объектов по типу"

#: ../../development/requests.rst:237
msgid ""
"To select objects of a particular type, specify the type's name and the "
"object fields to return. You don't have to indicate all the object fields "
"that are defined in the data model. Specify any number of fields you need. "
"For example:"
msgstr ""
"Чтобы выбрать объекты определенного типа, укажите имя типа, а также нужные "
"вам поля, значения которых требуется получить. Не обязательно указывать все "
"поля объекта, определенные в модели данных. Пример:"

#: ../../development/requests.rst:241
msgid ""
"query {\n"
"  Country {\n"
"    title\n"
"  }\n"
"}"
msgstr ""
"query {\n"
"  Country {\n"
"    title\n"
"  }\n"
"}"

#: ../../development/requests.rst:249
msgid ""
"The response is a JSON object that contains an array with all the records of"
" the ``Country`` type. For each record, the response includes only the "
"fields specified in the request."
msgstr ""
"Ответ --- объект JSON, содержащий массив со всеми записями типа ``Country``."
" Для каждой записи ответ включает только указанные в запросе поля."

#: ../../development/requests.rst:252
msgid ""
"{\n"
"  \"data\": {\n"
"    \"Country\": [\n"
"      {\n"
"        \"title\": \"Russia\"\n"
"      },\n"
"      {\n"
"        \"title\": \"Germany\"\n"
"      }\n"
"    ]\n"
"  }\n"
"}"
msgstr ""
"{\n"
"  \"data\": {\n"
"    \"Country\": [\n"
"      {\n"
"        \"title\": \"Russia\"\n"
"      },\n"
"      {\n"
"        \"title\": \"Germany\"\n"
"      }\n"
"    ]\n"
"  }\n"
"}"

#: ../../development/requests.rst:270
msgid "Requests by primary index"
msgstr "Запросы по первичному индексу"

#: ../../development/requests.rst:272
msgid "A specific object can be selected by primary index:"
msgstr "С помощью первичного индекса можно выбрать отдельный объект:"

#: ../../development/requests.rst:274
msgid ""
"query {\n"
"  Country(title: \"Germany\") {\n"
"    title\n"
"    phone_code\n"
"  }\n"
"}"
msgstr ""
"query {\n"
"  Country(title: \"Germany\") {\n"
"    title\n"
"    phone_code\n"
"  }\n"
"}"

#: ../../development/requests.rst:286
msgid "Requests by secondary index"
msgstr "Запросы по вторичному индексу"

#: ../../development/requests.rst:288
msgid "Requests by secondary index have the same syntax:"
msgstr "У запросов по вторичному индексу такой же синтаксис:"

#: ../../development/requests.rst:290
msgid ""
"query {\n"
"  City(country: \"Russia\") {\n"
"    title\n"
"    country\n"
"    population\n"
"  }\n"
"}"
msgstr ""
"query {\n"
"  City(country: \"Russia\") {\n"
"    title\n"
"    country\n"
"    population\n"
"  }\n"
"}"

#: ../../development/requests.rst:303
msgid "Requests by compound index"
msgstr "Запросы по составному индексу"

#: ../../development/requests.rst:305
msgid ""
"To perform a request by compound index, specify an array of field values:"
msgstr ""
"Чтобы выполнить запрос по составному индексу, укажите массив значений полей:"

#: ../../development/requests.rst:307
msgid ""
"query {\n"
"  City(primary: [\"Saint Petersburg\", \"Russia\"]) {\n"
"    title\n"
"    country\n"
"    population\n"
"  }\n"
"}"
msgstr ""
"query {\n"
"  City(primary: [\"Saint Petersburg\", \"Russia\"]) {\n"
"    title\n"
"    country\n"
"    population\n"
"  }\n"
"}"

#: ../../development/requests.rst:320
msgid "Comparison operators"
msgstr "Операторы сравнения"

#: ../../development/requests.rst:322
msgid "Comparison operators are represented by index name suffixes."
msgstr ""
"Операторы сравнения представлены суффиксами, которые добавляются к именам "
"индексов."

#: ../../development/requests.rst:324
msgid "Supported operators:"
msgstr "Поддерживаются следующие операторы:"

#: ../../development/requests.rst:326
msgid "``_gt`` (Greater Than)"
msgstr "``_gt`` (больше)"

#: ../../development/requests.rst:327
msgid "``_ge`` (Greater Than or Equal)"
msgstr "``_ge`` (больше или равно)"

#: ../../development/requests.rst:328
msgid "``_lt`` (Less Than)"
msgstr "``_lt`` (меньше)"

#: ../../development/requests.rst:329
msgid "``_le`` (Less Than or Equal)"
msgstr "``_le`` (меньше или равно)"

#: ../../development/requests.rst:331
msgid "For example:"
msgstr "Пример:"

#: ../../development/requests.rst:333
msgid ""
"query {\n"
"  City(population_ge: 1000000) {\n"
"    title\n"
"    country\n"
"    population\n"
"  }\n"
"}"
msgstr ""
"query {\n"
"  City(population_ge: 1000000) {\n"
"    title\n"
"    country\n"
"    population\n"
"  }\n"
"}"

#: ../../development/requests.rst:343
msgid ""
"String field indexes support the ``_like`` operator so you can search for a "
"particular pattern in a string. You can use the wildcard sign ``%`` in the "
"pattern."
msgstr ""
"При поиске по индексам полей-строк поддерживается оператор ``_like``, "
"который позволяет получать строки, содержащие определенные шаблоны. В "
"шаблонах можно использовать подстановочный символ ``%``."

#: ../../development/requests.rst:346
msgid ""
"query {\n"
"  City(title_like: \"M%\") {\n"
"    title\n"
"    country\n"
"  }\n"
"}"
msgstr ""
"query {\n"
"  City(title_like: \"M%\") {\n"
"    title\n"
"    country\n"
"  }\n"
"}"

#: ../../development/requests.rst:358
msgid "Multiple conditions"
msgstr "Множественные условия"

#: ../../development/requests.rst:360
msgid ""
"You can use several conditions in one request. In this case, the request "
"will search for objects satisfying all the conditions simultaneously "
"(logical AND). Use only indexed fields to specify the conditions."
msgstr ""
"В одном запросе можно сочетать несколько условий. Тогда TDG будет искать "
"объекты, удовлетворяющие всем условиям одновременно (логическое И). "
"Указывайте в условиях только индексированные поля."

#: ../../development/requests.rst:364
msgid ""
"query {\n"
"  City(country: \"Russia\", population_lt: 1000000) {\n"
"    title\n"
"    country\n"
"    population\n"
"  }\n"
"}"
msgstr ""
"query {\n"
"  City(country: \"Russia\", population_lt: 1000000) {\n"
"    title\n"
"    country\n"
"    population\n"
"  }\n"
"}"

#: ../../development/requests.rst:377
msgid "Requests by relations"
msgstr "Запросы по отношениям"

#: ../../development/requests.rst:379
msgid ""
"To select objects by relations, use the same syntax as in the general object"
" type query."
msgstr ""
"Чтобы выбрать объекты по отношениям, используйте тот же синтаксис, что и в "
"общем запросе объектов по типу."

#: ../../development/requests.rst:381
msgid ""
"In the :ref:`example model <graphql_model_diagram>`, there is a one-to-many "
"relationship between the objects ``Country`` and ``City``. Consequently, you"
" can get the data both about the country and the cities in one request."
msgstr ""
"В :ref:`примере модели <graphql_model_diagram>` между объектами ``Country`` "
"и ``City`` есть связь «один ко многим». Поэтому вы можете одним запросом "
"получить данные как о стране, так и о городах."

#: ../../development/requests.rst:384
msgid ""
"query {\n"
"    Country(title: \"Russia\") {\n"
"        title\n"
"        city {\n"
"            title\n"
"            population\n"
"    }\n"
"    }\n"
"}"
msgstr ""
"query {\n"
"    Country(title: \"Russia\") {\n"
"        title\n"
"        city {\n"
"            title\n"
"            population\n"
"    }\n"
"    }\n"
"}"

#: ../../development/requests.rst:396
msgid "Response example:"
msgstr "Пример ответа:"

#: ../../development/requests.rst:398
msgid ""
"{\n"
"  \"data\": {\n"
"    \"Country\": [\n"
"      {\n"
"        \"title\": \"Russia\",\n"
"        \"city\": [\n"
"          {\n"
"            \"title\": \"Moscow\",\n"
"            \"population\": 12655050\n"
"          },\n"
"          {\n"
"            \"title\": \"Saint Petersburg\",\n"
"            \"population\": 5384342\n"
"          },\n"
"          {\n"
"            \"title\": \"Tver\",\n"
"            \"population\": 424969\n"
"          }\n"
"        ]\n"
"      }\n"
"    ]\n"
"  }\n"
"}"
msgstr ""
"{\n"
"  \"data\": {\n"
"    \"Country\": [\n"
"      {\n"
"        \"title\": \"Russia\",\n"
"        \"city\": [\n"
"          {\n"
"            \"title\": \"Moscow\",\n"
"            \"population\": 12655050\n"
"          },\n"
"          {\n"
"            \"title\": \"Saint Petersburg\",\n"
"            \"population\": 5384342\n"
"          },\n"
"          {\n"
"            \"title\": \"Tver\",\n"
"            \"population\": 424969\n"
"          }\n"
"        ]\n"
"      }\n"
"    ]\n"
"  }\n"
"}"

#: ../../development/requests.rst:427
msgid "Pagination"
msgstr "Разбиение на страницы"

#: ../../development/requests.rst:429
msgid ""
"TDG applies cursor-based pagination similar to the one described in the "
"`GraphQL documentation <http://graphql.org/learn/pagination/#pagination-and-"
"edges>`_."
msgstr ""
"В TDG применяется разбиение на страницы на основе курсора. Похожий механизм "
"описан в `документации GraphQL "
"<http://graphql.org/learn/pagination/#pagination-and-edges>`_."

#: ../../development/requests.rst:431
msgid "In general, the request with pagination has the following syntax:"
msgstr "У запроса с разбиением на страницы следующий синтаксис:"

#: ../../development/requests.rst:433
msgid ""
"query {\n"
"    object_name(first:N, after:$cursor)\n"
"    }"
msgstr ""
"query {\n"
"    object_name(first:N, after:$cursor)\n"
"    }"

#: ../../development/requests.rst:439
msgid "where"
msgstr "Пояснение:"

#: ../../development/requests.rst:441
msgid ""
"``first`` specifies the maximum number of elements to return. Defaults to "
"10."
msgstr ""
"``first`` определяет максимальное количество возвращаемых элементов (по "
"умолчанию 10)."

#: ../../development/requests.rst:442
msgid ""
"``after`` passes an opaque cursor---a string defining the element from which"
" TDG should continue request execution."
msgstr ""
"``after`` передает непрозрачный курсор --- строку, определяющую элемент, с "
"которого система TDG должна продолжить выполнение запроса."

#: ../../development/requests.rst:444
msgid "Here is the first request with pagination:"
msgstr "Вот первый запрос с разбиением на страницы:"

#: ../../development/requests.rst:446
msgid ""
"query {\n"
"    City(first: 2) {\n"
"        title\n"
"        country\n"
"        cursor\n"
"    }\n"
"}"
msgstr ""
"query {\n"
"    City(first: 2) {\n"
"        title\n"
"        country\n"
"        cursor\n"
"    }\n"
"}"

#: ../../development/requests.rst:456
msgid "The response is the following:"
msgstr "Ответ:"

#: ../../development/requests.rst:458
msgid ""
"{\n"
"  \"data\": {\n"
"    \"City\": [\n"
"      {\n"
"        \"cursor\": \"gaRzY2FukqZCZXJsaW6nR2VybWFueQ\",\n"
"        \"country\": \"Germany\",\n"
"        \"title\": \"Berlin\"\n"
"      },\n"
"      {\n"
"        \"cursor\": \"gaRzY2FukqdEcmVzZGVup0dlcm1hbnk\",\n"
"        \"country\": \"Germany\",\n"
"        \"title\": \"Dresden\"\n"
"      }\n"
"    ]\n"
"  }\n"
"}"
msgstr ""
"{\n"
"  \"data\": {\n"
"    \"City\": [\n"
"      {\n"
"        \"cursor\": \"gaRzY2FukqZCZXJsaW6nR2VybWFueQ\",\n"
"        \"country\": \"Germany\",\n"
"        \"title\": \"Berlin\"\n"
"      },\n"
"      {\n"
"        \"cursor\": \"gaRzY2FukqdEcmVzZGVup0dlcm1hbnk\",\n"
"        \"country\": \"Germany\",\n"
"        \"title\": \"Dresden\"\n"
"      }\n"
"    ]\n"
"  }\n"
"}"

#: ../../development/requests.rst:477
msgid ""
"To get the next data batch, take the ``cursor`` field's value of the last "
"object received and pass it as the ``after`` argument to the next request:"
msgstr ""
"Чтобы получить следующую группу данных, возьмите значение поля ``cursor`` "
"последнего полученного объекта и передайте его в качестве аргумента "
"``after`` в следующем запросе:"

#: ../../development/requests.rst:480
msgid ""
"query {\n"
"    City(first: 2, after: \"gaRzY2FukqdEcmVzZGVup0dlcm1hbnk\") {\n"
"        title\n"
"        country\n"
"        cursor\n"
"    }\n"
"}"
msgstr ""
"query {\n"
"    City(first: 2, after: \"gaRzY2FukqdEcmVzZGVup0dlcm1hbnk\") {\n"
"        title\n"
"        country\n"
"        cursor\n"
"    }\n"
"}"

#: ../../development/requests.rst:490
msgid "Then run this logic in a cycle until you get an empty page:"
msgstr "Повторяйте эту логику, пока не получите пустую страницу:"

#: ../../development/requests.rst:492
msgid ""
"{\n"
"  \"data\": {\n"
"    \"City\": []\n"
"  }\n"
"}"
msgstr ""
"{\n"
"  \"data\": {\n"
"    \"City\": []\n"
"  }\n"
"}"

#: ../../development/requests.rst:500
msgid "Pagination for requests with relations works in a similar way:"
msgstr ""
"Для запросов с отношениями разбиение на страницы работает аналогичным "
"образом:"

#: ../../development/requests.rst:502
msgid ""
"query {\n"
"  Country(title: \"Russia\") {\n"
"    title\n"
"    city(first: 2) {\n"
"        title\n"
"        population\n"
"        cursor\n"
"    }\n"
"  }\n"
"}"
msgstr ""
"query {\n"
"  Country(title: \"Russia\") {\n"
"    title\n"
"    city(first: 2) {\n"
"        title\n"
"        population\n"
"        cursor\n"
"    }\n"
"  }\n"
"}"

#: ../../development/requests.rst:515
msgid ""
"Reversed pagination is also possible: TDG returns objects preceding the "
"element marked with a cursor. For this, you need to specify a negative value"
" for the ``first`` argument:"
msgstr ""
"Страницы результатов можно выводить и в обратном порядке. В этом случае TDG "
"будет возвращать объекты, предшествующие отмеченному курсором элементу. "
"Чтобы страницы выводились в обратном порядке, укажите для аргумента "
"``first`` отрицательное значение:"

#: ../../development/requests.rst:518
msgid ""
"query {\n"
"    City(first: -2) {\n"
"        title\n"
"        country\n"
"        cursor\n"
"    }\n"
"}"
msgstr ""
"query {\n"
"    City(first: -2) {\n"
"        title\n"
"        country\n"
"        cursor\n"
"    }\n"
"}"

#: ../../development/requests.rst:531
msgid "Requests by version"
msgstr "Запросы по версии"

#: ../../development/requests.rst:533
msgid ""
"TDG implements object versioning. Consequently, it can run requests by "
"conditions that are based on object versions. For more information, refer to"
" the :doc:`/administration/versioning` page."
msgstr ""
"В TDG реализовано версионирование объектов, поэтому в условие запроса можно "
"включать версии. Подробности вы найдете на этой странице: "
":doc:`/administration/versioning`."
